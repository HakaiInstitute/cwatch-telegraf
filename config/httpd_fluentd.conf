<source>
  @type http_healthcheck
  port 9888
  bind 0.0.0.0
</source>

<source>
      @type tail
      format /^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")? (?<request_time>[^ ]*)$/
      path /fluentd/log/ssl_access_log
      pos_file /fluentd/pos/httpd-logs.pos
      tag httpd.ssl.access
      time_key time
      time_format %d/%b/%Y:%H:%M:%S %z
</source>

<filter>
  @type grep
  <exclude>
    key agent
    pattern /dataforseo.com/dataforseo-bot|www.semrush.com/bot.html|Koj Bot|yandex.com/bots|www.bing.com/bingbot.htm|webmaster.petalsearch.com/site/petalbot|www.google.com/bot.html|babbar.tech/crawler|webmeup-crawler.com|ahrefs.com/robot|neeva.com/neevabot|opensiteexplo
rer.org/dotbot/
  </exclude>
  <regexp>
    key code
    pattern /^2\d+$/
  </regexp>
  <regexp>
    key path
    pattern /\/erddap\/(tabledap|griddap)\/[a-zA-Z0-9_]+\.[a-zA-Z0-9_]+/
  </regexp>
  <exclude>
    key path
    pattern /(\.css|\.html|\.js)(\?|$)/
  </exclude>
</filter>

# Add envirment variables to the message body so that they can be used later in the pipline.
# Without this we can not access enviroment variables.
<filter>
  @type record_transformer
  enable_ruby
  <record>
    plausible ${ENV['PLAUSIBLE_URL']}
    status "ok"
    sentry ${ENV['SENTRY_URL']}
    url ${ENV['HOST_URL']}${record['path']}
    name "File Download"
    domain ${ENV['DOMAINS']}
    props {
    	"url": "${ENV['HOST_URL']}${record['path']}",
    	"download_size": "${record['size']}"
	}
  </record>
</filter>

# copy the same message to multiple output streams
<match **>
  @type copy

  # send to plausible
  <store>
    @type http
    endpoint "${plausible}"
    open_timeout 2
    headers_from_placeholders {
        "User-Agent": "${agent}",
        "X-Forwarded-For": "${host}"
        }
    content_type application/json
    <format>
      @type json
    </format>
    <buffer agent,host,plausible>
      flush_interval 5s
      overflow_action block
    </buffer>
  </store>

  # Send to sentry cron monitroing
  # Enviroment variables containing https:// are replaced with http:// for some reason so must hard code https protocol here.
  <store>
    @type http
    endpoint "https://${sentry}"
    content_type application/json
    <format>
      @type json
    </format>
    <buffer sentry>
      flush_interval 5m
      total_limit_size 5000
      overflow_action drop_oldest_chunk
    </buffer>
  </store>
  
  # Print to stdout (docker logs)
  <store>
    @type stdout
  </store>
</match>